import pickle

final_pops = ['CAACACCCCCTGTTGGGACTGTGAATTTGTGGCTTCATATATTCACAGTC', 'CAACACCCCCTGTTGAGATTGCGGATGTATGGCTTCATATATCAGTAATC', 'CAACACCCCCTGTTGAGATTGCAGGTGTGTGGCTTCATATATCTGTAATC', 'CAACACCCCCTGTTGAGATTGCAGGTTTGTGGCTTCATATATCTGTAATC', 'CAACACCCCCTGTTGAGACTGTGATTGTGTGGCTTCATATATTCACAGTC', 'CAACACCCCCTGTTGAGATTGCGAATGTGTGGCTTCACACATTTGTAATC', 'CAACACTGTCTGGGGCGACTGTGGATTTGTGGCTTCACATATCTGTAGTC', 'CAACACCCCCTGTTGAGATTGCGGATGTATGGCTTCATACGTTTGTAATC', 'CAACACCCCCTGTTGAGATTGCAGTTGTGTGGCTTCACATATCTGTAATC', 'CAACACTGTCTGGGGCGACTGTGGATCTGTGGCTTCACATATTCGTAGTC', 'CTACACTGTCTGGGGCGATTGAAGCCTTGTGACTTGATATATTCAGAGTC', 'CAACACTGTCTGGGGCGATTGCGAATTTGTGGCTTCACATATTCGTAGTC', 'CAACACCCCCTGTTGGGATTACAGGTGTGTGGCTTCATATATCTGTAATC', 'CAACACCCCCTGTTGAGATTGCGGATTTGTGGCTTCATATATCTGTAATC', 'CAACACCCCCTGTTGAGATTGCGGATGTGTGGCTTCACACATTTGTAATC', 'CAACACTGTCTGGGGCGATTGCGAATTTATGGCTTCATATATTCACAGTC', 'CAACACCCCCTGTTGAGACTGTGACTTTGTGGCTTCATATATTCACAGTC', 'CAACACTGTCTGGGGCGATTGCGAATATATGGCTTCATATATTCACAGTC', 'CAACACCCCCTGTTGAGATTGCAGTTGTGTGGCTTCATATATCTGTAATC', 'CAACACTGTCTGGGGCGATTGCGAATTTATGGCATCATATATTCACAGTC', 'CAACACCCCCTGTTGGGATTGCAGGTGTGTGGCTTCATATATCTGTAATC', 'CAACACTGTCTGGGGCGACTGCGGATTTATGGCTTCATATATTCACAGTC', 'CAACACTGTCTGGGGCGATTGCGAATCTATGGCTTCATATATTCACAGTC', 'CAACACTGTCTGGGGCGACTGCGGATTTGTGGCTTCACATATCTGTAGTC', 'CAACACCCCCTGTTGAGATTGCGAGTGTGTGGCTTCACACATTTGTAATC', 'CAACACTGTCTGGGGCGACTGTGGATTTGTGGCTTCACATATTCGTAGTC', 'CAACACTGTCTGGGGCGATTGTGACTTTATGGCTTCATATATTCACAGTC', 'CAACACTCTCTGGGGCGACTGTGGATTTGTGGCTTCACATATCTGTAGTC', 'CAACACTGTCTGGGGCGATTGCGAATTTATGGCTCCATATATTCACAGTC']

# 上のfinal_popsから配列の重複を削除
dict = {}
for ind in final_pops:
    dict[ind] = 1

seqs = dict.keys()

import pandas
target = pandas.read_csv('../GA/modules/data/mixed_sequence.csv')

import json
t2 = [json.loads(line) for line in open('../GA/modules/data/train.json')]


for i in range(len(t2)):
    seq = t2[i]['sequence']
    target.loc[len(target)] = [seq, 0, 'RNA']


import Levenshtein as lv

result = pandas.DataFrame(columns=['sequence', 'max_ratio'])

for seq in seqs:
    max_ratio = 0
    for i in range(len(target)):
        ratio = lv.ratio(seq, target['utr'][i])
        if ratio > max_ratio:
            max_ratio = ratio
    result.loc[len(result)] = [seq, max_ratio]

result.to_csv('edit_distance.csv', index=True)

