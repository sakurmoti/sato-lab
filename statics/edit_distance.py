import pickle
import Levenshtein as lv

seqs = ['GCCTCGCGCCCCCGCGAAGCCGACGGCGACGGGCACCACGCGGATACAAC', 'CTACACGCTTTATAGGCAAAGGACACCCATATTTTCTCTGGGGCCTTTCA', 'GCCTCGCGCCCCGGCGAAGCCGACGGCCACCGGCACCACGCGGATACAAC', 'CTACACGCTTTCTCGACAAAAGACACCCATATTTTCTCTGGGGCCTTTCA', 'CTACACGCTTTATAGGCAAAGGCCACCCATATTTACTCTGGGGCCTTTCA', 'GCCGGCCGCTCGCCCCCAGCCGCCCCGCGTGCCCCACGCGCACCATCAAC', 'GCCTGCCGCCCGGCCCCAGCCGCCCCCCGTGCCCCACGCGCACCATCAAC', 'GCCGGCCGCTCGCCCCCAGCCGCCCCGCGTCCCCGACGCGCACCATCAAC', 'GCGCCGCGCACCGCGCCCCGCAGCGCCACCAGCCGCGCCGCGCCAACAAC', 'GCCTGCCGCCCGGCCCCAGCCGACCCGCGTGCCCCACGCGCACCATCAAC', 'GCCGGCCGCTCGGCCCCAGCCGCCCCGCGTGCCCCACGCGCACCAACAAC', 'CTACACGCTTTCTTGACAAAAGACACCCATATTTTCTCTGGGGCCTTTCA', 'CTACACGCTTTTTGGACCAAAGACACCCATATTTTCTCTGGGGCCTTTCA', 'GCCGGCCGCTCGCCCCCAGCCGCCCCGCGTCCCCGACGCGCTCCAACAAC', 'GCCTCGCGCCCCGGCGGAGCCGACGGCCACCGGCACCACGCGGATACAAC', 'GCCGGCCGCTCGCCCCCCGCAGCCCCGCGTGCCCCACGCGCGCCAACAAC', 'CCCCCGCGCCCCGAGCCCCGCAGCGCCGCCAGCCGCGCCGCGCCAACAAC', 'GCCGGCCGCTCGCCCCCAGCCGCCCCGCGTGCCCCACGCGCTCCAACAAC', 'GCCGGCCGCTCGCCCCCAGCCGCCCCGCGTCCCCCACGCGCACCATCAAC', 'GCCTGCCGCCCGGCCCCAGCCGCCCCGCGTGCCCCACGCGCGCCATCAAC', 'GCCCCGCGCCCCGCGCCCCGCAGCGCCGCCAGCCGCGCCGCGCCAACAAC', 'GCCGGCCGCTCGCCCCCAGCCGCCCCGCGTGCCCCACGCGCGCCATCAAC', 'CTACACGCTTTCTGGACAAAAGACACCCATATTTTCTCTGGGGCCTTTCA', 'GCGCCGCGCACCGCGCCCCGCAGCGCCGCCACCCGCGCCGCGCCAACAAC', 'CTACACGCTTTATAGGCAAAGGCCACCCATATTTACTCTGGGGCCTTTCC', 'GCCGGCCGCTCGCCCGCAGCCGCCCCGCGTCCCCCACGCGCACCATCAAC', 'CCCCCGCGCCCCGCGCCCCGCAGCGCCGCCAGCCGCGCCGCGCCAACAAC', 'GCCGGCCGCTCGCCCGCAGCCGCCCCGCGTCCCCCACGCGCTCCAACAAC', 'GCGCCGCGCACCGCGCCCCGCAGCGCCGCCAGCCGCGCCGCGCCAACAAC', 'GCCTCGCGCCGCCCCGCAGCCGACGGCGCCGCGCACCACGCGGATACAAC', 'GCCTCGCGCCCCCGCGAAGCCGACGGCGCCGCGCACCACGCGGATACAAC', 'GCCTGCCGCCCGGCCCCAGCCGCCCCGCGTGCCCCACGCGCACCATCAAC', 'GCCTCGCACCCCCGCGAAGCCGACGGCGACGGGCACCACGCGGATACAAC', 'GCCTCGCGCCCCCGCGAAGCCGACGGCCACGGGCACCACGCGGATACAAC', 'GCCGGCCGCTCGCCCCCCGCCGCCCCGCGTGCCCCACGCGCGCCAACAAC', 'GCCTCGCGCCCCCGCGAAGCCGCCGGCGCCGCGCACCACGCGGATACAAC', 'GCCTGCCGCCCGGCCCCAGCCGCCCCGCGTCCCCGACGCGCTCCAACAAC', 'GCCTCGCGCCCCGGCGAAGCCGACGGCGCCGCGCACCACGCGGATACAAC', 'GCCGGCCGCTCGCCCCCCGCAGCCCCGCGAGCCCCACGCGCGCCAACAAC', 'CTACACGCTTTTTGGACAAAAGACACCCATATTTTCTCTGGGGCCTTTCA', 'GCCGGCCGCTCGCCCCCCGCAGCCCCGCGTGCCCCACGCGCACCATCAAC', 'GCCGGCCGCTCGCCCCCAGCCGCCCCGCGTCCCCCACGCGCGCCAACAAC', 'GCCGGCCGCTCGCCCCCCGCAGCCCCGCGTGCCCCACGCGCGCCATCAAC', 'GCCTCGCCCGGGCCCGCAGCCGACGGCCCCGCGCACCACGCGGATACAAC', 'GCCGGCCGCTCGCCCCCCGCCGCCCCGCGTGCCCCACGCGCACCAACAAC', 'GCCTGGCGCCCGGCCCCAGCCGACCCGCGTGCCCCACGCGCACCATCAAC', 'GCCGGCCGCTCGCCCCCCGCCGCCCCGCGTGCCCCACGCGCTCCAACAAC', 'CTACACGCTTTTTGGACAAAAGACACCCATATTTACTCTGGGGCCTTTCA', 'GCGCCGCGCACCGCGCCCCGCAGCGCCCCGACCCGCGCCGCGCCAACAAC', 'GCCTCGCGCCCCCGCGAAGCCGACGGCCACGGGCACCACGCGAATACAAC']

# seqsの中で類似度を計算する場合
avg = 0
for s1 in seqs:
    for s2 in seqs:
        if s1 == s2:
            continue
        # avg += lv.distance(s1, s2)
        avg += lv.ratio(s1, s2)

avg /= len(seqs) * (len(seqs) - 1)
print(avg)


